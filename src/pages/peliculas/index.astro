---
import Layout from '@layouts/Layout.astro';
import Carrusel from '../../components/Carrusel.astro';

---

<Layout>
  <Carrusel />

  <div class="page-container">
    <div class="titulo">
      <h1>MovieKids</h1>

      <div class="filtros">
        <input type="text" id="buscador" placeholder="Buscar película..." /> 
        
        <select id="filtro-categoria">
          <option value="">Todas las categorías</option>
          <!-- Opciones generadas dinámicamente en JS -->
        </select>
      </div>
      
      <div class="galeria">
        <!-- Aquí se inyectan las tarjetas con JS -->
      </div>
    </div>
  </div>
  
  <div class="paginado">
    <button id="btn-anterior" class="boton deshabilitado">Anterior</button>
    <span class="pagina-actual">Página 1 de 1</span>
    <button id="btn-siguiente" class="boton">Siguiente</button>
  </div>

  <style is:global>
  .page-container {
  /* Cambiamos el fondo fijo por la variable que cambia con el modo */
  background: var(--color-fondo);
  min-height: 100vh;
  padding: 20px 0;
  }

  /* Título con color primario variable */
  .titulo {
    font-size: 2.5rem;
    text-align: center;
    margin: 30px 0 20px;
    color: var(--color-primario);
    font-family: 'Arial Black', sans-serif;
  }

  .galeria {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    gap: 20px;
    padding: 20px;
  }

  .tarjeta {
    position: relative;
    overflow: hidden;
    border-radius: 10px;
    /* Sombra usando variable */
    box-shadow: 0 4px 12px var(--color-sombra);
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .tarjeta img {
    width: 100%;
    height: 300px;
    object-fit: cover;
    display: block;
    transition: transform 0.3s ease;
  }

  .tarjeta:hover img {
    transform: scale(1.1);
  }

  .overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    /* Fondo semitransparente, puede quedar igual */
    background: var(--color-overlay);
    /* Texto en color variable */
    color: var(--color-texto);
    padding: 15px;
    transform: translateY(100%);
    transition: transform 0.3s ease;
    font-size: 0.9em;
  }

  .tarjeta:hover .overlay {
    transform: translateY(0%);
  }

  .overlay h3 {
    margin: 0 0 8px;
    font-size: 1rem;
  }

  .overlay p {
    margin: 4px 0;
    font-size: 0.85rem;
  }

  .paginado {
    /* Usamos color primario para fondo, o podemos hacer un gradiente con variable */
    background: var(--color-paginado);
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px;
    padding-bottom: 3rem;
  }

  .boton {
    background-color: var(--color-boton);
    color: white;
    padding: 10px 20px;
    text-decoration: none;
    border-radius: 8px;
    font-weight: bold;
    transition: background-color 0.3s ease;
    cursor: pointer;
  }

  .boton:hover:not(.deshabilitado) {
    background-color: var(--color-boton-hover);
  }

  .boton.deshabilitado {
    background-color: var(--color-boton-deshabilitado);
    color: var(--color-boton-texto-deshabilitado);
    pointer-events: none;
    cursor: default;
  }

  .pagina-actual {
    font-weight: bold;
  }

  .favorito-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: var(--color-boton);
    color: white;
    border: none;
    padding: 8px 10px;
    border-radius: 50%;
    cursor: pointer;
    font-size: 1.2rem;
    z-index: 2;
    transition: background-color 0.3s ease;
  }

  .favorito-btn:hover {
    background-color: var(--color-boton-hover);
  }
  .filtros {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-bottom: 20px;
  }

  #buscador {
    padding: 8px 12px;
    width: 200px;
    border-radius: 6px;
    border: 1px solid #ccc;
  }

  #filtro-categoria {
    padding: 8px 12px;
    border-radius: 6px;
    border: 1px solid #ccc;
    min-width: 180px;
  }
  </style>

<script is:inline>

    document.addEventListener("DOMContentLoaded", async () => {
      const res = await fetch("/data/peliculas.json");
      const peliculas = await res.json();

      const contenedorGaleria = document.querySelector(".galeria");
      const buscador = document.getElementById("buscador");
      const filtroCategoria = document.getElementById("filtro-categoria");
      const btnAnterior = document.getElementById("btn-anterior");
      const btnSiguiente = document.getElementById("btn-siguiente");
      const paginaActualSpan = document.querySelector(".pagina-actual");

      let peliculasFiltradas = peliculas;
      let currentPage = 1;
      const itemsPerPage = 14;
      let totalPages = Math.ceil(peliculasFiltradas.length / itemsPerPage);

      // Extraer categorías únicas y llenar select
      const categoriasSet = new Set();
      peliculas.forEach(pelicula => {
        pelicula.categoria.split(",").forEach(cat => categoriasSet.add(cat.trim()));
      });
      categoriasSet.forEach(cat => {
        const option = document.createElement("option");
        option.value = cat;
        option.textContent = cat;
        filtroCategoria.appendChild(option);
      });

      function renderPeliculas() {
        const start = (currentPage - 1) * itemsPerPage;
        const end = start + itemsPerPage;
        const peliculasPagina = peliculasFiltradas.slice(start, end);

        contenedorGaleria.innerHTML = "";
        if (peliculasPagina.length === 0) {
          contenedorGaleria.innerHTML = "<p>No se encontraron películas.</p>";
          return;
        }

        peliculasPagina.forEach(pelicula => {
          const div = document.createElement("div");
          div.classList.add("tarjeta");
          div.innerHTML = `
            <button class="favorito-btn" data-id="${pelicula.id}"></button>
            <a href="/peliculas/${pelicula.id}">
              <img src="${pelicula.imagen}" alt="${pelicula.titulo}" />
              <div class="overlay">
                <h3>${pelicula.titulo}</h3>
                <p>${pelicula.descripcion}</p>
                <p><strong>Categoría:</strong> ${pelicula.categoria}</p>
                <p><strong>Duración:</strong> ${pelicula.duracion}</p>
              </div>
            </a>
          `;
          contenedorGaleria.appendChild(div);
        });

        // Actualizar estado botones paginado
        btnAnterior.disabled = currentPage === 1;
        btnSiguiente.disabled = currentPage === totalPages || totalPages === 0;

        btnAnterior.classList.toggle("deshabilitado", currentPage === 1);
        btnSiguiente.classList.toggle("deshabilitado", currentPage === totalPages || totalPages === 0);

        paginaActualSpan.textContent = `Página ${currentPage} de ${totalPages}`;

        // Reactivar funcionalidad botones favoritos
        const favoritos = JSON.parse(localStorage.getItem("favoritos")) || [];
        contenedorGaleria.querySelectorAll(".favorito-btn").forEach(btn => {
          const id = parseInt(btn.getAttribute("data-id"));
          btn.textContent = favoritos.includes(id) ? "❤️" : "🤍";

          btn.onclick = () => {
            let favoritos = JSON.parse(localStorage.getItem("favoritos")) || [];
            if (favoritos.includes(id)) {
              favoritos = favoritos.filter(favId => favId !== id);
              btn.textContent = "🤍";
              Swal.fire({
                icon: "info",
                title: "Película eliminada",
                text: "Se ha quitado de Mi Lista",
                confirmButtonColor: "#e91e63",
                background: '#d6c0ff',
                timer: 1500,
                showConfirmButton: false
              });
            } else {
              favoritos.push(id);
              btn.textContent = "❤️";
              Swal.fire({
                icon: "success",
                title: "Película guardada",
                text: "Se ha añadido a Mi Lista",
                confirmButtonColor: "#e91e63",
                background: '#d6c0ff',
                timer: 1500,
                showConfirmButton: false
              });
            }
            localStorage.setItem("favoritos", JSON.stringify(favoritos));
          };
        });
      }

      function filtrarPeliculas() {
        const texto = buscador.value.toLowerCase();
        const categoria = filtroCategoria.value;

        peliculasFiltradas = peliculas.filter(pelicula => {
          const textoMatch =
            pelicula.titulo.toLowerCase().includes(texto) ||
            pelicula.descripcion.toLowerCase().includes(texto);

          const categoriaMatch =
            categoria === "" || pelicula.categoria.split(",").map(c => c.trim()).includes(categoria);

          return textoMatch && categoriaMatch;
        });

        currentPage = 1;
        totalPages = Math.ceil(peliculasFiltradas.length / itemsPerPage);

        renderPeliculas();
      }

      // Eventos filtro y buscador
      buscador.addEventListener("input", filtrarPeliculas);
      filtroCategoria.addEventListener("change", filtrarPeliculas);

      // Eventos botones paginado
      btnAnterior.addEventListener("click", () => {
        if (currentPage > 1) {
          currentPage--;
          renderPeliculas();
        }
      });
      btnSiguiente.addEventListener("click", () => {
        if (currentPage < totalPages) {
          currentPage++;
          renderPeliculas();
        }
      });

      // Render inicial
      totalPages = Math.ceil(peliculas.length / itemsPerPage);
      renderPeliculas();
    });

    //logout
    const logoutBtn = document.getElementById("logout");
    if (logoutBtn) {
      document.getElementById("logout").addEventListener("click", () => {
        Swal.fire({
          icon: "question",
          title: "¿Cerrar sesión?",
          text: "Se cerrará tu sesión actual",
          showCancelButton: true,
          confirmButtonText: "Sí, salir",
          cancelButtonText: "Cancelar",
          confirmButtonColor: "#e91e63",
          background: '#d6c0ff',
          cancelButtonColor: "#3085d6"
        }).then((result) => {
          if (result.isConfirmed) {
            localStorage.removeItem("usuario");
            Swal.fire({
              icon: "success",
              title: "Sesión cerrada",
              showConfirmButton: false,
              timer: 1500
            }).then(() => {
              window.location.href = "/";
            });
          }
        });
      });
    }
  
    //script de sesion 
    const usuario = JSON.parse(localStorage.getItem("usuario"));
    if (!usuario) {
      Swal.fire("Debes iniciar sesión");
      window.location.href = "/";
    }
</script>

</Layout>
